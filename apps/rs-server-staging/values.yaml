# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- Namespace for the deployment
namespace: processing

app:
  # -- Port for the application
  port: 8000
  # -- URL suffix for the application. Must be the same value as ingress.path
  docsUrl: /docs
  # -- Config directory for the application
  confDir: /app/conf
  # -- URL of the API Key Manager service (internal)
  uacUrl: http://apikeymanager.processing.svc.cluster.local:8000/auth/check_key
  # -- URL of the API Key Manager home page (public)
  uacHomeUrl: https://apikeymanager.{{ platform_domain_name }}/docs
  # -- Catalog pod address
  endpointCatalog: http://rs-server-catalog.processing.svc.cluster.local:8080
   # -- Cadip server pod address
  endpointCadip: https://{{ platform_domain_name }}/cadip 
   # -- Adgs server pod address
  endpointAdgs: https://{{ platform_domain_name }}/auxip 
  # -- Object Storage bucket for the catalog
  catalogBucket: {{ rspy.catalog_bucket }}
  station:
    adgs:
      type: auxip
    cadip:
      type: cadip
    sgs:
      type: cadip
    mti:
      type: cadip

  # -- Bucket configuration to use to monitor the lifespan and name of data buckets
  # Use an external configuration through an external configmap with the value "externalCatalogBucketConfigMapName"
  # OR
  # Set your own configuration in the value expirationBucketCsv
  bucketConfig:
    # -- Set to true to use an external configmap for the configuration instead of the one set in expirationBucketCsv
    useExternalStagingBucketConfigMap: true
    # -- Name of the external configmap to use. Used only if useExternalCatalogBucketConfigMap is true
    externalStagingBucketConfigMapName: "rs-catalog-staging-configmap"
    # -- Bucket configuration. Used only if useExternalCatalogBucketConfigMap is false. 
    # Default config puts all data in a bucket called rspython-ops-staging-all-production with a lifespan of 30 days.
    expirationBucketCsv: |
      *, *, *, 30, rspython-ops-staging-all-production
    # -- File name for the configuration.
    # If you use an external configmap, put the name of the file of your configmap, so the environment variables are set properly
    bucketConfigFileName: expiration_bucket.csv

dask:
  # -- Dask gateway address
  gateway_address: http://traefik-dask-gateway.dask-gateway.svc.cluster.local
  # -- Dask gateway auth type
  gateway_auth_type: jupyterhub
  # -- Jupyter API Token when dask.jupyterhub=jupyterhub
  # This token must be generated from https://processing.{{ platform_domain_name }}/jupyter/hub/token
  # See Prerequisite in the [Dask Gateway how-to](/docs/how-to/dask-gateway.md).
  jupyterhub_api_token: {{ rs_server_staging.jupyterhub_token }}

postgres:
  # -- PostgreSQL port
  port: "5432"
  # -- PostgreSQL database name
  db: {{ rs_server.database.name }}
  # -- PostgreSQL service URL
  host: {{ rs_server.database.host }}
  secret:
    # -- Username to authenticate with the PostgreSQL service
    user: {{ rs_server.database.username }}
    # -- Password to authenticate with the PostgreSQL service
    pass: {{ rs_server.database.password }}

obs:
  # -- URL of the object storage service endpoint
  endpoint: {{ s3.endpoint }}
  # -- Region of the object storage service
  region: {{ s3.region }}
  secret:
    # -- Access Key to authenticate with the object storage service
    ak: {{ s3.access_key }}
    # -- Secret Key to authenticate with the object storage service
    sk: {{ s3.secret_key }}

auth:
  secret:
    # -- OIDC End Point
    oidc_endpoint: "https://iam.{{ platform_domain_name }}"
    # -- OIDC Realm
    oidc_realm: "rspy"
    # -- OIDC CLient ID
    oidc_client_id: "apikeymanager"
    # -- OIDC Secret used to sync user info from Keycloak
    oidc_client_secret: "{{ apikeymanager_oidc_client_secret }}"
    # -- Random string used to encode cookie-based HTTP sessions in SessionMiddleware
    cookie_secret: "{{ rsserver_cookieSecret }}"

ingress:
  # -- Enabled/Disable ingress
  enabled: true
  issuer:
    # -- Ingress Issuer type
    type: cluster-issuer
    # -- Ingress Issuer name
    name: letsencrypt-prod
  # -- Ingress host name
  host: {{ platform_domain_name }}
  # -- Ingress path for the application
  path:
    - /processes
    - /jobs

# -- Pod affinity
affinity:
  nodeAffinity:
   requiredDuringSchedulingIgnoredDuringExecution:
     nodeSelectorTerms:
     - matchExpressions:
       - key: node-role.kubernetes.io/access_csc
         operator: Exists

# -- Pod toleration
tolerations:
- key: role
  operator: Equal
  value: access_csc
  effect: NoSchedule

# -- Pod initContainers
initContainers:
- name: init-check
  image: alpine/curl:latest
  command:
    - /bin/sh
    - -c
    - |
      until test "$(curl -XGET --silent grafana-tempo-distributor.logging.svc.cluster.local:3100/ready)" = "ready"; do echo grafana-tempo-distributor is not ready; sleep 2; done; echo grafana-tempo-distributor reached
